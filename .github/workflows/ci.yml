name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black isort flake8 bandit autoflake

      - name: Run black check
        run: black --check .

      - name: Run isort check
        run: isort --check-only .

      - name: Run flake8
        run: flake8 app.py simple_server.py src/ --extend-ignore=E501,W503 --exclude=.venv,__pycache__,.git,dist,node_modules

      - name: Run bandit security check
        run: bandit -r src/ -ll

  type-check:
    name: Type Checking
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install mypy types-requests

      - name: Run mypy
        run: mypy src/ --ignore-missing-imports || true

  test:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio

      - name: Validate Python syntax
        run: |
          python -m py_compile app.py simple_server.py src/odoo_mcp/*.py

      - name: Test imports
        run: |
          python -c "import sys; sys.path.insert(0, 'src'); from odoo_mcp.server import mcp; print('✅ Server imports successfully')"
          python -c "import sys; sys.path.insert(0, 'src'); from odoo_mcp.odoo_client import OdooClient; print('✅ OdooClient imports successfully')"

      # - name: Run pytest
      #   run: pytest tests/ -v --cov=src/odoo_mcp --cov-report=xml --cov-report=term
      #   if: always()

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     files: ./coverage.xml
      #     flags: unittests
      #     name: codecov-umbrella
      #   if: matrix.python-version == '3.12'

  security:
    name: Security Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check for hardcoded secrets
        run: |
          python scripts/check_secrets.py

      - name: Check MCP security best practices
        run: |
          python scripts/check_mcp_security.py

      - name: Check import safety
        run: |
          python scripts/check_import_security.py

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [lint, type-check, test, security]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
